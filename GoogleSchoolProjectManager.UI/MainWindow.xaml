<mah:MetroWindow x:Class="GoogleSchoolProjectManager.UI.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:GoogleSchoolProjectManager.UI"
                 xmlns:vm="clr-namespace:GoogleSchoolProjectManager.UI.ViewModel"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:googleLibDrive="clr-namespace:GoogleSchoolProjectManager.Lib.Google.Drive;assembly=GoogleSchoolProjectManager.Lib"
                 xmlns:p="clr-namespace:GoogleSchoolProjectManager.UI.Properties"
                 xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                 xmlns:behavior="clr-namespace:GoogleSchoolProjectManager.UI.Behavior"
                 xmlns:microsoftBehavior="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:converter="clr-namespace:GoogleSchoolProjectManager.UI.Converter"

                 dialog:DialogParticipation.Register="{Binding}"

                 mc:Ignorable="d"
                 Title="{Binding Title}"
                 Height="650"
                 Width="800"
                 
                 MinHeight="650"
                 MinWidth="800"
                 >
    <Window.Resources>
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converter:StringFormatConcatenator x:Key="StringFormatConcatenator"/>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static p:Resources.APP_MENU_File}">
                <MenuItem Header="{x:Static p:Resources.APP_MENU_Exit}" Command="{Binding CMD_CloseWindow}" CommandParameter="{Binding RelativeSource={RelativeSource
                                                  Mode=FindAncestor,
                                                  AncestorType=Window}}"/>
            </MenuItem>
            <!--<MenuItem Header="{x:Static p:Resources.APP_MENU_Tools}">
                <MenuItem Header="_Manage users">
                    <MenuItem.Icon>
                        <Image Source="/WpfTutorialSamples;component/Images/user.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Show groups" IsCheckable="True" IsChecked="True" />
            </MenuItem>-->
        </Menu>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" MinHeight="100"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="3*" MinHeight="100"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="100"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="2*" MinWidth="100"/>
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0" Grid.Row="2" Grid.RowSpan="10" Header="{x:Static p:Resources.APP_GoogleDriveFolderFileList}" Margin="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" MaxHeight="35"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.ColumnSpan="2" IsEnabled="{Binding IsFolderLocked, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Content="{x:Static p:Resources.CMD_ExpandAll}" Margin="3" Click="Btn_ExpandAll_Click"/>
                        <Button Grid.Column="1" Content="{x:Static p:Resources.CMD_ShrinkAll}" Margin="3" Click="Btn_ShrinkAll_Click"/>
                    </Grid>
                    <TreeView x:Name="mainTreeView"
                              Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                              ItemsSource="{Binding Tree.Items}"
                              IsEnabled="{Binding Path=IsFolderLocked, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
                        <microsoftBehavior:Interaction.Behaviors>
                            <behavior:BindableSelectedItemBehavior SelectedItem="{Binding MainSelectedItem, Mode=TwoWay}" />
                        </microsoftBehavior:Interaction.Behaviors>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="False"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type googleLibDrive:GFile}" ItemsSource="{Binding Items}">
                                <Label Content="{Binding Name}">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsGFolder}" Value="true">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>

                    <Button Grid.Column="0" Grid.Row="2" Command="{Binding CMD_GetFolderTree}" Content="{x:Static p:Resources.CMD_GetFolderTree}" Margin="3" 
                            IsEnabled="{Binding IsFolderLocked, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"/>
                    <ToggleButton Grid.Column="1" Grid.Row="2" Margin="3"
                                  Command="{Binding CMD_SelectMainFolderToggleChanged}"
                                  IsEnabled="{Binding IsFolderSelected, Mode=OneWay}"
                                  IsChecked="{Binding IsFolderLocked}">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="IsChecked" Value="True"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{x:Static p:Resources.CMD_SelectMainFolder_Checked}"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="{x:Static p:Resources.CMD_SelectMainFolder_Unchecked}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </Grid>
            </GroupBox>

            <!-- Vertical for bottom row-->
            <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="5" VerticalAlignment="Center"/>
            
            <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Header="{x:Static p:Resources.GROUP_HEADER_GeneratingFiles}" Margin="1" IsEnabled="{Binding IsFolderLocked, Mode=OneWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <!--<RowDefinition Height="*" MaxHeight="35"/>-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Header="{x:Static p:Resources.GROUP_HEADER_FileNamesSource}" Grid.Column="0" Grid.Row="0" Grid.RowSpan="7" ToolTip="{x:Static p:Resources.GROUP_TOOLTIP_FileNamesSource}">
                        <TextBox TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Text="{Binding FileNamesSource, UpdateSourceTrigger=PropertyChanged}"/>
                    </GroupBox>

                    <GroupBox Header="{x:Static p:Resources.GROUP_HEADER_FileNamesResult}" Grid.Column="1" Grid.Row="0" Grid.RowSpan="10" ToolTip="{x:Static p:Resources.GROUP_TOOLTIP_FileNamesResult}">
                        <ListBox ItemsSource="{Binding FileNamesList}" BorderBrush="ForestGreen" BorderThickness="1">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="MaxHeight" Value="35" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </GroupBox>

                    <Button Grid.Column="2" Grid.Row="0" Command="{Binding CMD_SelectFileTemplateSource}" Content="{x:Static p:Resources.CMD_SelectFileTemplateSource}" Margin="3"/>
                    <TextBox IsReadOnly="True" Grid.Column="3" Grid.Row="0" Text="{Binding GFileTemplateSourcePath, Mode=OneWay}" Margin="5,2"/>

                    <!--<Button Grid.Column="1" Grid.Row="1" Command="{Binding CMD_SelectFileNamesSource}" Content="{x:Static p:Resources.CMD_SelectFileNamesSource}" Margin="3"/>-->
                    <Grid Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding GenerateFilesFromTemplatePrefix, UpdateSourceTrigger=PropertyChanged}" Margin="5,2,0,2"/>
                        <TextBlock Grid.Column="1" Text="{x:Static p:Resources.Label_NameOfFile}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <TextBox Grid.Column="2" Text="{Binding GenerateFilesFromTemplatePostfix, UpdateSourceTrigger=PropertyChanged}" Margin="0,2,5,2"/>
                    </Grid>

                    <Grid Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{x:Static p:Resources.Label_EnterNewFolderName}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <TextBox Grid.Column="1" Text="{Binding NewFolderName, UpdateSourceTrigger=PropertyChanged}" Margin="5,2" TextWrapping="NoWrap"/>
                    </Grid>


                    <Button Grid.Column="2" Grid.Row="4" Grid.ColumnSpan="1" Margin="3,1" Grid.RowSpan="1"
                            Command="{Binding CMD_CheckAllTopLevelFolders}"
                            CommandParameter="true"
                            Content="{x:Static p:Resources.CMD_CheckAllTopLevelFolders_true}"/>
                    <Button Grid.Column="3" Grid.Row="4" Grid.ColumnSpan="1" Margin="3,1" Grid.RowSpan="1"
                            Command="{Binding CMD_CheckAllTopLevelFolders}"
                            CommandParameter="false"
                            Content="{x:Static p:Resources.CMD_CheckAllTopLevelFolders_false}"/>

                    <Button Grid.Column="2" Grid.Row="5" Grid.ColumnSpan="2" Margin="3,1" Grid.RowSpan="1"
                            Command="{Binding CMD_GenerateFilesFromTemplate}"
                            Content="{x:Static p:Resources.CMD_GenerateFilesFromTemplate}"/>
                    <Button Grid.Column="2" Grid.Row="6" Grid.ColumnSpan="2" Margin="3,1" Grid.RowSpan="1"
                            Command="{Binding CMD_GenerateEmptyFolder}"
                            Content="{x:Static p:Resources.CMD_GenerateEmptyFolder}"/>
                    
                    <TreeView Grid.Column="4" Grid.Row="0" Grid.RowSpan="10"
                              ItemsSource="{Binding MainSelectedItem.Items}"
                              IsEnabled="{Binding Path=IsFolderLocked}">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type googleLibDrive:GFile}" ItemsSource="{Binding Items}">
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelectedForUpdate}">
                                    <CheckBox.Style>
                                        <Style TargetType="{x:Type CheckBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsNotGFolder}" Value="true">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Grid>
            </GroupBox>

            <!-- Vertical for bottom row-->
            <GridSplitter Grid.Row="2" Grid.Column="1" Width="5" HorizontalAlignment="Center"/>

            <GroupBox Grid.Row="2" Grid.Column="2" Header="{x:Static p:Resources.GROUP_HEADER_KHSUpdate}" Margin="1" IsEnabled="{Binding IsFolderLocked, Mode=OneWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="35"/>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <DockPanel Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="{x:Static p:Resources.DatePicker_KHS_Label_SelectDateFrom}" MinWidth="30" VerticalAlignment="Center"/>
                        <DatePicker Loaded="DatePicker_Loaded_ToChangeWaterMark" ToolTip="{x:Static p:Resources.DatePicker_KHS_SelectDateFrom}" Margin="5,2"
                                SelectedDate="{Binding UpdateKHSRequest.DateFrom}"/>
                    </DockPanel>
                    <DockPanel Grid.Column="0" Grid.Row="1">
                        <TextBlock Text="{x:Static p:Resources.DatePicker_KHS_Label_SelectDateTo}" MinWidth="30" VerticalAlignment="Center"/>
                        <DatePicker Loaded="DatePicker_Loaded_ToChangeWaterMark" ToolTip="{x:Static p:Resources.DatePicker_KHS_SelectDateTo}" Margin="5,2"
                                SelectedDate="{Binding UpdateKHSRequest.DateTo}"/>
                    </DockPanel>

                    <Button Grid.Column="1" Grid.Row="0" Command="{Binding CMD_CheckAllFiles_ForUpdate}" CommandParameter="true" Content="{x:Static p:Resources.CMD_CheckAllFiles_ForUpdate}" Margin="3"/>
                    <Button Grid.Column="1" Grid.Row="1" Command="{Binding CMD_CheckAllFiles_ForUpdate}" CommandParameter="false" Content="{x:Static p:Resources.CMD_UnCheckAllFiles_ForUpdate}" Margin="3"/>

                    <GroupBox Grid.Column="0" Grid.Row="2" Grid.RowSpan="1" Grid.ColumnSpan="2" Header="{x:Static p:Resources.GROUP_HEADER_SubjectsAndGoals}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="70"/>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" MaxWidth="50"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" MinHeight="26" MaxHeight="35"/>
                                    <RowDefinition Height="*" MinHeight="26" MaxHeight="35"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static p:Resources.KHSRequest_Label_Subject}" VerticalAlignment="Center"/>
                                <TextBox   Grid.Column="1" Grid.Row="0" Text="{Binding KHSRequestEditSubject}" Margin="5,2"/>

                                <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static p:Resources.KHSRequest_Label_Goal}" VerticalAlignment="Center"/>
                                <TextBox   Grid.Column="1" Grid.Row="1" Text="{Binding KHSRequestEditGoal}" Margin="5,2" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"/>
                            </Grid>

                            <Button Grid.Column="0" Grid.Row="1" Command="{Binding CMD_KHSRequest_AddSubjectGoal}" Content="{x:Static p:Resources.CMD_KHSRequest_AddSubjectGoal}" Margin="3"/>
                            <Button Grid.Column="1" Grid.Row="1" Command="{Binding CMD_KHSRequest_RemoveSubjectGoal}" Content="{x:Static p:Resources.CMD_KHSRequest_RemoveSubjectGoal}" Margin="3"/>

                            <ListBox Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2"
                                     SelectedItem="{Binding UpdateKHSRequest.SelectedSubjectGoal}"
                                     ItemsSource="{Binding UpdateKHSRequest.SubjectGoalList}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="BorderBrush" Value="Black" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Subject}" FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Goal}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </GroupBox>

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6" Command="{Binding CMD_KHSRequest_UpdateSelectedKHSes}" Content="{x:Static p:Resources.CMD_KHSRequest_UpdateSelectedKHSes}" Margin="3"/>

                    <TreeView Grid.Column="2" Grid.Row="0" Grid.RowSpan="10"
                              ItemsSource="{Binding MainSelectedItem.Items}"
                              IsEnabled="{Binding Path=IsFolderLocked}">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type googleLibDrive:GFile}" ItemsSource="{Binding Items}">
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelectedForUpdate}">
                                    <CheckBox.Style>
                                        <Style TargetType="{x:Type CheckBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsGFolder}" Value="true">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Grid>
            </GroupBox>
        </Grid>
    </DockPanel>
</mah:MetroWindow>
